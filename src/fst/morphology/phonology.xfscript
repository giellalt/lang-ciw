! There are flags at morpheme boundaries.
set flag-is-epsilon ON

! Defining natural classes and morphological boundaries

! All consonants, including special characters
define Cons [ b | c | d | f | g | h | j | k | l | m | n | n1 | p | s | s1 | t | v | w | w1 | w2 | x | y | z | "'" ] ;

! implictly includes long vowels, which just repeats characters
define Vowel [ a | e | i | o | i1 | V1 ] ;

! nonlight vowels are simply long vowels
define NonLight [[Vowel ?* Vowel] | e ] ?* ;

! Define stem boundary markers
define PREBD "<<"+ ;
define SUFBD ">>"+ ;
define BD ["<<" | ">>"]+ ;

! Sometimes there may be more than one consecutive
! morpheme boundary. Reduce those to 1.
define PrefixBoundaryCleanup PREBD @-> "<<" ;
define SuffixBoundaryCleanup SUFBD @-> ">>" ;


! Begin suffix rules

! Begin verb suffix rules

! d-deletion: Delete stem-final "d" 
! 	when the suffix complex starts with a consonant.
define dDeletion d -> 0 || _ SUFBD Cons ;

! iInsertion: insert "i" in derived reciprocal/reflexive stems 
! that end in a glottal stop, n, w (because of wiijiiw), or s (because of gikas)
define iInsertion [..] -> i || [{'}|{n}|{w}|{s}] _ SUFBD {di} ;

! nasalAssimilation: With stems ending in "m", the "m" 
! 	changes to "n" when the suffix complex starts with "z", "g", or "d".
define nasalAssimilation m -> n || a _ SUFBD [z|g|d] ;

! awaaRule: For stems that end in "aw", the "aw" goes to "aa" 
! 	when the suffix complex starts with "g", "k", or "d".
define awaaRule w -> a || a _ SUFBD [k|g|d] ;

! awooRule: For stems that end in "aw", the "aw" goes to "oo" 
!	when the suffix complex starts with "n" or "s".
define awooRule a w -> o o || _ SUFBD [n|s] ;

! awowRule: The amaw of benefactive verbs is replaced by amow 
! in direct forms by some speakers at Red Lake and elsewhere.
define awowRule a w (->) o w || a m _ SUFBD a a ;

! woRule1, woRule2: "wi(1)" becomes "o" after a consonant (either everywhere or word finally). 
! 	In Border Lakes, this rule only applies with non-word-final "Cwi" sequences. 
! 	For example, we get "mizhwi" rather than "mizho" for the imerative form.
define woRule1 [ w1 -> o1 || Cons _ SUFBD [i|i1] (SUFBD) [? - [(SUFBD)|w1] ] ] .o. [[i|i1] -> 0 || o1 SUFBD _ ] .o. [o1 -> o];
define woRule2 [ w1 (->) o1 || Cons _ SUFBD [i|i1] (SUFBD) .#. ] .o. [[i|i1] -> 0 || o1 SUFBD _ ] .o. [o1 -> o];

! shared noun and verb suffix rules

! n1Rule, s1Rule: Stems ending in "n1" palatalize to "zh" and "s1" to "sh" 
! when the suffix complex starts with the first person theme sign "i1" 
! or inanimate singular marker "i2".
define n1Rule n1 -> {zh} || _ SUFBD [i1|i2] ;
define s1Rule s1 -> {sh} || _ SUFBD [i1|i2] ;

! vowelDeletion: Delete word-final short vowels in multi-syllabic words 
! or mono-syllabic words with a long vowel 
! (preseve the short vowel in mono-syllabic words with a short vowel, e.g. "makwa").
define vowelDeletion [ Vowel - e ] -> 0 || NonLight Cons (SUFBD) _ (SUFBD) .#. ;

! w1Deletion: Delete word-final w1
define w1Deletion w1 -> 0 || _ (SUFBD) .#. ;

! LengthenV: a short vowel to the left of v1 lengthens 
! (so i -> ii / _ v1, a -> aa / _ v1, o -> oo / _ v1)
define LengthenV [ i -> {ii} , a -> {aa} , o -> {oo} || _ SUFBD V1 ] .o. [ V1 -> 0 ] ;


! noun-specific suffix rules

! w2Deletion: w2 deletes word finally, before consonants, before vowels "o", 
! before "oo", and before "V1" (so remains before vowels a, aa, i, ii, and e)
define w2Deletion w2 -> 0 || _ (BD) [o | V1 | Cons | "-" | .#. ] ; 

! y1hRule: Turn y1 into h if it follows a long vowel + n sequence at the end of a word 
! This handles some stems that are encoded inconsistently; 
! a purely orthographic rule.
define y1hRule y1 -> h || [Vowel Vowel | e] n (SUFBD) _ (SUFBD) .#. ;

! y1Deletion: Delete y1 at the end of a word
define y1Deletion y1 -> 0 || _ (SUFBD) .#. ;

! hDeletion: Optionally delete h between n and y (h -> 0 / n_y). 
! Optional, only because sometimes the spelling convention of 
! deleting that "h" is done inconsistently.
define hDeletion h (->) 0 || n _ y1 ;

! y2Deletion: Always delete y2
define y2Deletion y2 -> 0 ;

! irrDimGan: Irregular diminutive form nouns ending in -(i)gan. 
! Appears as -gaans rather than -ganens
define irrDimGan g a n SUFBD e n  -> g a a n ">>" ;

! irrDimVVny: Irregular diminutive form in VVny stems. 
! For example, "-oon(h)yens" becomes "-oon(h)s" 
define irrDimVVny n y1 SUFBD e n (->) n ">>" || [Vowel Vowel | e] _ ;

! irrDimAnimosh: Irregular diminutive form for the noun animosh.
define irrDimAnimosh e n -> o o n || a n i m o s h SUFBD _ ;

! pejorativePalatalization: s and z palatalize to zh when 
! followed by the pejorative marker ish.
define pejorativePalatalization [ s | z ] (->) z h || _ SUFBD i s h ;

! Default rule
define defaultRules [ a1 -> a , i2 -> i , n1 -> n , s1 -> s , i1 -> i , w1 -> w , w2 -> w , y1 -> y ] ;

! Begin prefix rules

!Border Lakes prefix rules:

!ni(m/n/nd)-
!ni- before m, n, w, p, t, k, s, sh
!nim- before b
!nin- before d, j, z, zh, g
!nind- before vowels

!gi(d)-
!gi- before consonants
!gid- before vowels

!o(d)-
!o- before consonants
!od- before vowels

!ni-/n- before m, n, w, p, t, k, s, sh
!nim-/im-/m-/ni- before b
!nin-/in-/n-/ni- before d, j, z, zh, g
!nind-/ind-/nd- before vowels
!At Red Lake, we get niy- before aa

define PrefixDInsertion [..] -> d || .#. (PREBD) [{gi}|o|{ni}] _ PREBD Vowel ;
define PrefixNDInsertion [..] (->) n || .#. (PREBD) {ni} _ d PREBD Vowel ;
define PrefixDDeletion d (->) 0 || .#. (PREBD) {nin} _ PREBD ;
define PrefixIND {nid} (->) [{ind} | {nd}] || .#. (PREBD) _ PREBD;
define PrefixMInsertion [..] (->) m || .#. (PREBD) {ni} _ PREBD b ;
define PrefixMOnly {ni} (->) 0 || .#. (PREBD) _ m PREBD b ;
define PrefixYInsertion [..] (->) y || .#. (PREBD) {ni} _ PREBD {aa} ;
define PrefixNInsertion [..] (->) n || .#. (PREBD) {ni} _ PREBD [d|j|z|{zh}|g] ;
define PrefixNOnly {nin} (->) n || .#. _ PREBD [d|j|z|{zh}|g] ;
define PrefixNInitialDeletion n (->) 0 || .#. (PREBD) _ [ {in} | {im} ] PREBD ;

define prefixOLengthening o -> {oo} || .#. (PREBD) [ [ [ n | g ] i | o | {nin} | {in} | n ] d ] PREBD _ \o ; 

! Dependent noun prefix rules
define DepPrefixIInsertion [..] -> i || .#. (PREBD) [{g}|{n}] _ PREBD Cons ;
define DepPrefixWDeletion w -> 0 || .#. (PREBD) _ PREBD [{o}|{w}] ;
define DepPrefixWtoO w -> o || .#. (PREBD) _ PREBD Cons ;

! gadaRule
define gadaRule g a "-" -> d a "-" || .#. (PREBD) _ ;

! "dan", "das", "dash", or "daa" (excluding the preverb "daa-"), then add "en-" instead of the usualy initial change ablaut.
! endaso-biboonagizidÂ 
define ChCnjEn "<ChCnj>" -> {en} || (PREBD) _ (PREBD) [ {dan} | {das} | {daa} \"-" ] ; 

! Changed conjunct rules
! The weirdness of the rule is on purpose! 
! hfst cannot compile longest match in the way we had before. 
! So we needed to create temporary multicharacter symbols.
define ChCnjV [{aa} -> ayaa1 , {ii} -> aa1, {oo} -> waa1 || "<ChCnj>" [PREBD | Cons]* _ ] .o. [ a -> e , e -> {aye}  , i -> e , o -> {we} || "<ChCnj>" [PREBD | Cons]* _ ] .o. [ ayaa1 -> {ayaa}, aa1 -> {aa}, waa1 -> {waa} ];

define ChCnjDefault "<ChCnj>" -> 0 ;

! Tense-tensing: Lenis consonants ("b", "d", "j", "g", "z", "zh") are strengthened to
! the fortis counterpart ("p", "t", "ch", "k", "s", "sh") following the past tense preverbs
! (gii-/gii'-) and desiderative future tense preverbs (wii-/wii'-).
! This is triggered by a special character <T>.
define tenseTensing [ b -> p , d -> t , j -> {ch} , g -> k , {zh} -> {sh} || "<T>" "-" (PREBD) _ ] .o. [ z -> s || "<T>" "-" (PREBD) _ ];

! Allow for deletion of preverb boundaries
define DeletePVHyphen "-" (->) [ 0 | " " ] || _ ?* "<<" ;

! Clean up rules
define emptyFilter [? - "<EMPTYLEX>"]* ;
define cleanUp [ BD | "<T>" ] -> 0 ; 


! Composition, etc. Needs a lot more documentation

!read lexc all.lexc
!define Lexicon

read regex [!emptyFilter .o.
            !cleanUp.i ] .o. Lexicon .o. [ 
						! Suffix Rules
     	   	     	 	n1Rule .o. ! Must precede vowelDeletion
				       	s1Rule .o. ! Must precede vowelDeletion	
						iInsertion .o. ! Must precede nasalAssimilation	       
     	   	            nasalAssimilation .o.
				       	awaaRule .o.
				       	awooRule .o.
						awowRule .o.
				       	woRule1 .o. ! Must precede vowelDeletion
				       	woRule2 .o.	! Must precede vowelDeletion			       
			            vowelDeletion .o. ! Must precede w1Deletion, w2Deletion, and y1Deletion; must follow n1Rule, s1Rule, woRule1, and woRule2
			            w1Deletion .o. ! Must precede dDeletion; must follow vowelDeletion
				       	w2Deletion .o. ! Must precede LengthenV; must follow vowelDeletion
                       	dDeletion .o. ! Must follow w1Deletion
						y2Deletion .o.   
                        y1hRule .o. ! Must precede y1Deletion
				       	y1Deletion .o. ! Must precede hDeletion; must follow vowelDeletion and y1hRule
				      	hDeletion .o. ! Must follow y1Deletion
						LengthenV .o. ! Must follow w2Deletion
				       	irrDimVVny .o.
     	   	     	 	irrDimGan .o.
						irrDimAnimosh .o.
						pejorativePalatalization .o.
						! Prefix Rules							       
			           	DepPrefixIInsertion .o.
						DepPrefixWDeletion .o.
					   	DepPrefixWtoO .o.
						PrefixYInsertion .o.
			           	PrefixDInsertion .o.					   
				       	PrefixNDInsertion .o.
				       	PrefixDDeletion .o.
				       	PrefixIND .o.
				       	PrefixMInsertion .o.
						PrefixMOnly .o.
				       	PrefixNInsertion .o.
						PrefixNOnly .o.
						PrefixNInitialDeletion .o.
			           	prefixOLengthening .o.
						ChCnjEn .o.
				       	ChCnjV .o.
				       	tenseTensing .o.
						gadaRule .o.
						! Cleanup rules						
				       	defaultRules .o.
				       	ChCnjDefault .o.
				       	emptyFilter
                                        ] ;

define RulesNoCleanup ;

read regex RulesNoCleanup .o. cleanUp ;

